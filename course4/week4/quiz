Q1: What is the name of the method that starts a Java program?
main

Q2: What argument type should the method that starts a Java program take?
an array of Strings

Q3: What effect comes from declaring a field "static"?
There is only one copy of that field for the entire class, not one per instance.

Q4: In Java, how is the keyword "throw" used?
To make an exception occur when the program detects a problematic circumstance that it cannot directly handle.

Q5: Which of the following structures is the best way to create a socket while handling the exception?
try {
    Socket s = new Socket(addr, port);
    //code that uses s     
} 
catch(IOException ioe) {
    //code to handle the exception    
}

Q6: In Java, how is the keyword "finally" used?
In exception handling to specify code that should be executed regardless of whether an exception happened or not.

Q7: What would you pass into Files.newBufferedReader?
a Path

Q8: If you need to read data from a website without using the edu.duke package, you would probably want to use classes found in which package?
java.net

Q9: You saw that a BufferedReader can be used to read data from a file on the local computer, as well as from a website. You could also use it with other sources of data, as long as you have an appropriate Reader class to access the data.
Abstraction: the BufferedReader class can work with any class that conforms to a specific interface, and does not need to know the details of how/where it reads data.

Open/Closed Principle: the BufferedReader class is designed such that it can have its functionality expanded (to read from new data sources) without having to modify its code